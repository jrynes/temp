    <button id="collapseDisclaimer" onclick="toggleDisclaimer()" aria-label="Collapse disclaimer" title="Collapse disclaimer">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="6 9 12 15 18 9"></polyline>
        </svg>
    </button>
</div>
<button id="expandDisclaimer" class="hidden" onclick="toggleDisclaimer()" aria-label="Expand disclaimer" title="Expand disclaimer">
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="18 15 12 9 6 15"></polyline>
    </svg>
    <span>Disclaimer - Work in Progress</span>
</button>




#collapseDisclaimer,
#expandDisclaimer {
    background: none;
    border: none;
    cursor: pointer;
    color: inherit;
    transition: transform 0.3s ease, color 0.3s ease;
    display: flex;
    align-items: center;
    gap: 5px;
}

#collapseDisclaimer:hover,
#expandDisclaimer:hover {
    color: var(--header-button-hover-color);
    transform: scale(1.1);
}

#collapseDisclaimer:active,
#expandDisclaimer:active {
    color: var(--header-button-active-color);
}

#expandDisclaimer {
    display: none;
    margin: 10px 0;
    color: var(--header-button-hover-color);
    font-size: 14px;
}

#chatInterface.maximized #collapseDisclaimer {
    display: none;
}

#chatInterface:not(.maximized) #collapseDisclaimer {
    display: inline-block;
}

.hidden {
    display: none;
}




function toggleDisclaimer() {
    var disclaimer = document.getElementById('disclaimer');
    var disclaimerText = document.getElementById('disclaimerText');
    var collapseDisclaimer = document.getElementById('collapseDisclaimer');
    var expandDisclaimer = document.getElementById('expandDisclaimer');

    if (disclaimerText.style.display === 'none') {
        disclaimerText.style.display = 'block';
        collapseDisclaimer.style.display = 'inline-block';
        expandDisclaimer.style.display = 'none';
    } else {
        disclaimerText.style.display = 'none';
        collapseDisclaimer.style.display = 'none';
        expandDisclaimer.style.display = 'flex';
    }
}

function maximizeChat() {
    var chatInterface = getElementByIdSafe('chatInterface');
    var disclaimer = getElementByIdSafe('disclaimer');
    var collapseDisclaimerButton = getElementByIdSafe('collapseDisclaimer');
    var expandDisclaimerButton = getElementByIdSafe('expandDisclaimer');
    if (!isMaximized) {
        previousDimensions = {
            width: chatInterface.style.width,
            height: chatInterface.style.height,
            top: chatInterface.style.top,
            left: chatInterface.style.left
        };
        chatInterface.classList.add('maximized');
        chatInterface.style.width = '100vw';
        chatInterface.style.height = '100vh';
        chatInterface.style.top = '0';
        chatInterface.style.left = '0';
        isMaximized = true;
        collapseDisclaimerButton.style.display = 'none';
        expandDisclaimerButton.style.display = 'none';
        disclaimer.style.display = 'flex';
    } else {
        chatInterface.classList.remove('maximized');
        chatInterface.style.width = previousDimensions.width;
        chatInterface.style.height = previousDimensions.height;
        chatInterface.style.top = previousDimensions.top;
        chatInterface.style.left = previousDimensions.left;
        isMaximized = false;
        collapseDisclaimerButton.style.display = 'inline-block';
        expandDisclaimerButton.style.display = 'flex';
    }
}

// Adjust the initialization to ensure disclaimer is correctly handled on load
document.addEventListener('DOMContentLoaded', function() {
    var chatInterface = getElementByIdSafe('chatInterface');
    var collapseDisclaimerButton = getElementByIdSafe('collapseDisclaimer');
    var expandDisclaimerButton = getElementById


